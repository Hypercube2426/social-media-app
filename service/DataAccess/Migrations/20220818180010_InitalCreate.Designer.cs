// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(HubContext))]
    [Migration("20220818180010_InitalCreate")]
    partial class InitalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Entity.Concrete.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = 0L,
                            Name = "Student",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 2,
                            Created = 0L,
                            Name = "Business",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 3,
                            Created = 0L,
                            Name = "Manager",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 4,
                            Created = 0L,
                            Name = "Admin",
                            Updated = 0L
                        });
                });

            modelBuilder.Entity("Core.Entity.Concrete.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserOperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = 0L,
                            OperationClaimId = 4,
                            Updated = 0L,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Entity.Concrete.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Content = "Güzel gönderi",
                            Created = 0L,
                            PostId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Content = "Tanışmak ister misin?",
                            Created = 0L,
                            PostId = 1,
                            Updated = 0L
                        });
                });

            modelBuilder.Entity("Entity.Concrete.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<int>("DepartmentCodeId")
                        .HasColumnType("int");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentCodeId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = 0L,
                            DepartmentCodeId = 1,
                            FacultyId = 10,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 2,
                            Created = 0L,
                            DepartmentCodeId = 2,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 3,
                            Created = 0L,
                            DepartmentCodeId = 3,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 4,
                            Created = 0L,
                            DepartmentCodeId = 4,
                            FacultyId = 3,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 5,
                            Created = 0L,
                            DepartmentCodeId = 5,
                            FacultyId = 10,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 6,
                            Created = 0L,
                            DepartmentCodeId = 6,
                            FacultyId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 7,
                            Created = 0L,
                            DepartmentCodeId = 7,
                            FacultyId = 3,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 8,
                            Created = 0L,
                            DepartmentCodeId = 8,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 9,
                            Created = 0L,
                            DepartmentCodeId = 9,
                            FacultyId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 10,
                            Created = 0L,
                            DepartmentCodeId = 10,
                            FacultyId = 3,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 11,
                            Created = 0L,
                            DepartmentCodeId = 11,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 12,
                            Created = 0L,
                            DepartmentCodeId = 12,
                            FacultyId = 5,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 13,
                            Created = 0L,
                            DepartmentCodeId = 13,
                            FacultyId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 14,
                            Created = 0L,
                            DepartmentCodeId = 14,
                            FacultyId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 15,
                            Created = 0L,
                            DepartmentCodeId = 15,
                            FacultyId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 16,
                            Created = 0L,
                            DepartmentCodeId = 16,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 17,
                            Created = 0L,
                            DepartmentCodeId = 17,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 18,
                            Created = 0L,
                            DepartmentCodeId = 18,
                            FacultyId = 3,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 19,
                            Created = 0L,
                            DepartmentCodeId = 19,
                            FacultyId = 10,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 20,
                            Created = 0L,
                            DepartmentCodeId = 20,
                            FacultyId = 4,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 21,
                            Created = 0L,
                            DepartmentCodeId = 21,
                            FacultyId = 5,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 22,
                            Created = 0L,
                            DepartmentCodeId = 22,
                            FacultyId = 6,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 23,
                            Created = 0L,
                            DepartmentCodeId = 23,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 24,
                            Created = 0L,
                            DepartmentCodeId = 24,
                            FacultyId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 25,
                            Created = 0L,
                            DepartmentCodeId = 25,
                            FacultyId = 5,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 26,
                            Created = 0L,
                            DepartmentCodeId = 26,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 27,
                            Created = 0L,
                            DepartmentCodeId = 27,
                            FacultyId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 28,
                            Created = 0L,
                            DepartmentCodeId = 28,
                            FacultyId = 5,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 29,
                            Created = 0L,
                            DepartmentCodeId = 29,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 30,
                            Created = 0L,
                            DepartmentCodeId = 30,
                            FacultyId = 7,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 31,
                            Created = 0L,
                            DepartmentCodeId = 31,
                            FacultyId = 7,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 32,
                            Created = 0L,
                            DepartmentCodeId = 32,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 33,
                            Created = 0L,
                            DepartmentCodeId = 33,
                            FacultyId = 5,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 34,
                            Created = 0L,
                            DepartmentCodeId = 34,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 35,
                            Created = 0L,
                            DepartmentCodeId = 35,
                            FacultyId = 3,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 36,
                            Created = 0L,
                            DepartmentCodeId = 36,
                            FacultyId = 3,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 37,
                            Created = 0L,
                            DepartmentCodeId = 37,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 38,
                            Created = 0L,
                            DepartmentCodeId = 38,
                            FacultyId = 3,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 39,
                            Created = 0L,
                            DepartmentCodeId = 39,
                            FacultyId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 40,
                            Created = 0L,
                            DepartmentCodeId = 40,
                            FacultyId = 8,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 41,
                            Created = 0L,
                            DepartmentCodeId = 41,
                            FacultyId = 3,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 42,
                            Created = 0L,
                            DepartmentCodeId = 42,
                            FacultyId = 2,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 43,
                            Created = 0L,
                            DepartmentCodeId = 43,
                            FacultyId = 5,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 44,
                            Created = 0L,
                            DepartmentCodeId = 44,
                            FacultyId = 9,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 45,
                            Created = 0L,
                            DepartmentCodeId = 45,
                            FacultyId = 3,
                            Updated = 0L
                        });
                });

            modelBuilder.Entity("Entity.Concrete.DepartmentCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DepartmentCodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = 0L,
                            Name = "Acil Yardım ve Afet Yönetimi",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 2,
                            Created = 0L,
                            Name = "Alman Dili ve Edebiyatı",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 3,
                            Created = 0L,
                            Name = "Arkeoloji",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 4,
                            Created = 0L,
                            Name = "Bahçe Bitkileri",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 5,
                            Created = 0L,
                            Name = "Beslenme ve Diyetetik",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 6,
                            Created = 0L,
                            Name = "Bilgisayar Mühendisliği",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 7,
                            Created = 0L,
                            Name = "Bitki Koruma",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 8,
                            Created = 0L,
                            Name = "Biyoloji",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 9,
                            Created = 0L,
                            Name = "Biyomedikal Mühendisliği",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 10,
                            Created = 0L,
                            Name = "Biyosistem Mühendisliği",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 11,
                            Created = 0L,
                            Name = "Coğrafya",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 12,
                            Created = 0L,
                            Name = "Çalışma Ekonomisi ve Endüstri İlişkileri",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 13,
                            Created = 0L,
                            Name = "Çevre Mühendisliği",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 14,
                            Created = 0L,
                            Name = "Elektrik-Elektronik Mühendisliği",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 15,
                            Created = 0L,
                            Name = "Endüstri Mühendisliği",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 16,
                            Created = 0L,
                            Name = "Fizik",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 17,
                            Created = 0L,
                            Name = "Fransız Dili ve Edebiyatı",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 18,
                            Created = 0L,
                            Name = "Gıda Mühendisliği",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 19,
                            Created = 0L,
                            Name = "Hemşirelik",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 20,
                            Created = 0L,
                            Name = "Hukuk",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 21,
                            Created = 0L,
                            Name = "İktisat",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 22,
                            Created = 0L,
                            Name = "İlahiyat",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 23,
                            Created = 0L,
                            Name = "İngiliz Dili ve Edebiyatı",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 24,
                            Created = 0L,
                            Name = "İnşaat Mühendisliği",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 25,
                            Created = 0L,
                            Name = "İşletme",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 26,
                            Created = 0L,
                            Name = "Kimya",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 27,
                            Created = 0L,
                            Name = "Makine Mühendisliği",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 28,
                            Created = 0L,
                            Name = "Maliye",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 29,
                            Created = 0L,
                            Name = "Matematik",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 30,
                            Created = 0L,
                            Name = "Mimarlık",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 31,
                            Created = 0L,
                            Name = "Peyzaj Mimarlığı",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 32,
                            Created = 0L,
                            Name = "Psikoloji",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 33,
                            Created = 0L,
                            Name = "Siyaset Bilimi ve Kamu Yönetimi",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 34,
                            Created = 0L,
                            Name = "Sosyoloji",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 35,
                            Created = 0L,
                            Name = "Tarım Ekonomisi",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 36,
                            Created = 0L,
                            Name = "Tarımsal Biyoteknoloji",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 37,
                            Created = 0L,
                            Name = "Tarih",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 38,
                            Created = 0L,
                            Name = "Tarla Bitkileri",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 39,
                            Created = 0L,
                            Name = "Tekstil Mühendisliği",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 40,
                            Created = 0L,
                            Name = "Tıp",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 41,
                            Created = 0L,
                            Name = "Toprak Bilimi ve Bitki Besleme",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 42,
                            Created = 0L,
                            Name = "Türk Dili ve Edebiyatı",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 43,
                            Created = 0L,
                            Name = "Uluslararası İlişkiler",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 44,
                            Created = 0L,
                            Name = "Veterinerlik",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 45,
                            Created = 0L,
                            Name = "Zootekni",
                            Updated = 0L
                        });
                });

            modelBuilder.Entity("Entity.Concrete.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Altitude")
                        .HasColumnType("double");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Çorlu, silahtarağa mah.",
                            Altitude = 21.213124000000001,
                            Created = 0L,
                            Latitude = 43.213411999999998,
                            Name = "Çorlu Mühendislik Fakültesi",
                            UniversityId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 2,
                            Address = "Çorlu, silahtarağa mah.",
                            Altitude = 21.213124000000001,
                            Created = 0L,
                            Latitude = 43.213411999999998,
                            Name = "Fen-Edebiyat Fakültesi",
                            UniversityId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 3,
                            Address = "Çorlu, silahtarağa mah.",
                            Altitude = 21.213124000000001,
                            Created = 0L,
                            Latitude = 43.213411999999998,
                            Name = "Ziraat Fakültesi",
                            UniversityId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 4,
                            Address = "Çorlu, silahtarağa mah.",
                            Altitude = 21.213124000000001,
                            Created = 0L,
                            Latitude = 43.213411999999998,
                            Name = "Hukuk Fakültesi",
                            UniversityId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 5,
                            Address = "Çorlu, silahtarağa mah.",
                            Altitude = 21.213124000000001,
                            Created = 0L,
                            Latitude = 43.213411999999998,
                            Name = "İktisadi ve İdari Bilimler Fakültesi",
                            UniversityId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 6,
                            Address = "Çorlu, silahtarağa mah.",
                            Altitude = 21.213124000000001,
                            Created = 0L,
                            Latitude = 43.213411999999998,
                            Name = "İlahiyat Fakültesi",
                            UniversityId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 7,
                            Address = "Çorlu, silahtarağa mah.",
                            Altitude = 21.213124000000001,
                            Created = 0L,
                            Latitude = 43.213411999999998,
                            Name = "Güzel Sanatlar, Tasarım ve Mimarlık Fakültesi",
                            UniversityId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 8,
                            Address = "Çorlu, silahtarağa mah.",
                            Altitude = 21.213124000000001,
                            Created = 0L,
                            Latitude = 43.213411999999998,
                            Name = "Tıp Fakültesi",
                            UniversityId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 9,
                            Address = "Çorlu, silahtarağa mah.",
                            Altitude = 21.213124000000001,
                            Created = 0L,
                            Latitude = 43.213411999999998,
                            Name = "Veteriner Fakültesi",
                            UniversityId = 1,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 10,
                            Address = "Çorlu, silahtarağa mah.",
                            Altitude = 21.213124000000001,
                            Created = 0L,
                            Latitude = 43.213411999999998,
                            Name = "Sağlık Yüksekokulu",
                            UniversityId = 1,
                            Updated = 0L
                        });
                });

            modelBuilder.Entity("Entity.Concrete.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Content = "I used to live in my neighbor's fishpond, but the aesthetic wasn't to my taste.",
                            Created = 0L,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Content = "The waitress was not amused when he ordered green eggs and ham.",
                            Created = 0L,
                            Updated = 0L
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Content = "I don’t respect anybody who can’t tell the difference between Pepsi and Coke.",
                            Created = 0L,
                            Updated = 0L
                        });
                });

            modelBuilder.Entity("Entity.Concrete.PostHasTag", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostHasTag");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            TagId = 1,
                            Created = 0L,
                            Updated = 0L
                        },
                        new
                        {
                            PostId = 1,
                            TagId = 2,
                            Created = 0L,
                            Updated = 0L
                        },
                        new
                        {
                            PostId = 2,
                            TagId = 3,
                            Created = 0L,
                            Updated = 0L
                        },
                        new
                        {
                            PostId = 2,
                            TagId = 4,
                            Created = 0L,
                            Updated = 0L
                        },
                        new
                        {
                            PostId = 3,
                            TagId = 5,
                            Created = 0L,
                            Updated = 0L
                        },
                        new
                        {
                            PostId = 3,
                            TagId = 1,
                            Created = 0L,
                            Updated = 0L
                        });
                });

            modelBuilder.Entity("Entity.Concrete.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = 0L,
                            Description = "Sadece goygoy. Ciddi olma!",
                            Name = "Goygoy",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 2,
                            Created = 0L,
                            Description = "Kedini burada paylaşabilirsin.",
                            Name = "Hayvani",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 3,
                            Created = 0L,
                            Description = "İkinci el ürününü hemen elinden çıkart.",
                            Name = "İkinci el",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 4,
                            Created = 0L,
                            Description = "Hadi tanışalım.",
                            Name = "Tanışma",
                            Updated = 0L
                        },
                        new
                        {
                            Id = 5,
                            Created = 0L,
                            Description = "Nerelerde takılıyorsun?",
                            Name = "Mekanlar",
                            Updated = 0L
                        });
                });

            modelBuilder.Entity("Entity.Concrete.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<int>("FoundationYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Universities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "29",
                            Created = 0L,
                            FoundationYear = 2000,
                            Name = "Tekirdağ Namık Kemal Üniversitesi",
                            Updated = 0L
                        });
                });

            modelBuilder.Entity("Entity.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UniversityId")
                        .HasColumnType("int");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = 0L,
                            Email = "berkslv@gmail.com",
                            Name = "Berk Selvi",
                            PasswordHash = new byte[] { 136, 28, 171, 5, 161, 12, 180, 202, 42, 51, 27, 241, 82, 3, 115, 165, 121, 157, 162, 241, 160, 48, 63, 228, 44, 235, 87, 246, 192, 78, 177, 222, 252, 148, 138, 39, 144, 251, 94, 119, 49, 142, 34, 98, 52, 248, 100, 147, 69, 141, 180, 159, 251, 160, 198, 87, 56, 10, 244, 15, 131, 164, 42, 114 },
                            PasswordSalt = new byte[] { 40, 204, 156, 179, 196, 235, 124, 191, 134, 166, 200, 22, 138, 129, 246, 100, 123, 82, 250, 22, 101, 149, 165, 243, 70, 30, 212, 10, 99, 4, 231, 67, 203, 135, 169, 127, 164, 153, 64, 46, 171, 79, 34, 108, 112, 174, 59, 255, 25, 251, 153, 178, 65, 250, 77, 164, 49, 179, 158, 121, 43, 53, 117, 95, 16, 34, 163, 71, 131, 251, 35, 21, 226, 143, 41, 104, 112, 7, 103, 232, 68, 106, 166, 169, 247, 255, 101, 0, 242, 159, 210, 20, 32, 122, 81, 162, 235, 253, 161, 52, 163, 165, 137, 124, 141, 129, 85, 208, 79, 195, 207, 138, 171, 88, 63, 138, 235, 121, 90, 120, 182, 83, 175, 3, 131, 115, 92, 54 },
                            Role = "Admin",
                            Status = true,
                            Updated = 0L,
                            Username = "berkslv"
                        });
                });

            modelBuilder.Entity("Entity.Concrete.UserCode", b =>
                {
                    b.Property<int>("UserCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserCodeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCodes");
                });

            modelBuilder.Entity("Entity.Concrete.UserDislikeComment", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "CommentId");

                    b.HasIndex("CommentId");

                    b.ToTable("UserDislikeComment");
                });

            modelBuilder.Entity("Entity.Concrete.UserDislikePost", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("UserDislikePost");
                });

            modelBuilder.Entity("Entity.Concrete.UserLikeComment", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "CommentId");

                    b.HasIndex("CommentId");

                    b.ToTable("UserLikeComment");
                });

            modelBuilder.Entity("Entity.Concrete.UserLikePost", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("UserLikePost");
                });

            modelBuilder.Entity("Entity.Concrete.Comment", b =>
                {
                    b.HasOne("Entity.Concrete.User", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Concrete.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Entity.Concrete.Department", b =>
                {
                    b.HasOne("Entity.Concrete.DepartmentCode", "DepartmentCode")
                        .WithMany("Departments")
                        .HasForeignKey("DepartmentCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Concrete.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentCode");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Entity.Concrete.Faculty", b =>
                {
                    b.HasOne("Entity.Concrete.University", "University")
                        .WithMany("Faculties")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("Entity.Concrete.Post", b =>
                {
                    b.HasOne("Entity.Concrete.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Entity.Concrete.PostHasTag", b =>
                {
                    b.HasOne("Entity.Concrete.Post", "Post")
                        .WithMany("Tags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Concrete.Tag", "Tag")
                        .WithMany("Posts")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Entity.Concrete.User", b =>
                {
                    b.HasOne("Entity.Concrete.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Entity.Concrete.Faculty", "Faculty")
                        .WithMany("Users")
                        .HasForeignKey("FacultyId");

                    b.HasOne("Entity.Concrete.University", "University")
                        .WithMany("Users")
                        .HasForeignKey("UniversityId");

                    b.Navigation("Department");

                    b.Navigation("Faculty");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Entity.Concrete.UserCode", b =>
                {
                    b.HasOne("Entity.Concrete.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Concrete.UserDislikeComment", b =>
                {
                    b.HasOne("Entity.Concrete.Comment", "Comment")
                        .WithMany("Dislikes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Concrete.User", "User")
                        .WithMany("DislikedComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Concrete.UserDislikePost", b =>
                {
                    b.HasOne("Entity.Concrete.Post", "Post")
                        .WithMany("Dislikes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Concrete.User", "User")
                        .WithMany("DislikedPosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Concrete.UserLikeComment", b =>
                {
                    b.HasOne("Entity.Concrete.Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Concrete.User", "User")
                        .WithMany("LikedComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Concrete.UserLikePost", b =>
                {
                    b.HasOne("Entity.Concrete.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Concrete.User", "User")
                        .WithMany("LikedPosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Concrete.Comment", b =>
                {
                    b.Navigation("Dislikes");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Entity.Concrete.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entity.Concrete.DepartmentCode", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Entity.Concrete.Faculty", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entity.Concrete.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Dislikes");

                    b.Navigation("Likes");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Entity.Concrete.Tag", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Entity.Concrete.University", b =>
                {
                    b.Navigation("Faculties");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entity.Concrete.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("DislikedComments");

                    b.Navigation("DislikedPosts");

                    b.Navigation("LikedComments");

                    b.Navigation("LikedPosts");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
